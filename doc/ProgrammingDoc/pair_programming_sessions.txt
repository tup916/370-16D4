Pair Programming Session with Tushita:

The pair programming session involving Tushita and I focused on drawing the game board on the screen. The initial progress was slow, since neither of us have much prior experience with developing game screens. However, with both of our minds set on the task, the problem was solved within three hours. The productivity of the session was greater than my normal individual sessions, which is likely for two reasons. First, I am more experienced in graphical user interface development than Tushita is, but Tushita's mathematical skills are superior to my own, both of which were necessary for coding the drawing of the haxagonal grid of the game board to the screen. There were instances during the session when Tushita did not know how to proceed because she was not aware of the constructs provided by Java that would allow her to complete the task, which is when I was able to be of assistance to Tushita. Likewise, there were instances when I could not proceed myself because I couldn't resolve the math required to draw the hexagonal grid, which is where Tushita assisted me. Secondly, the second pair of eyes and mind reduced the number of mistakes and increased the code produced. Tushita caught many of my common mistakes, which likely decreased the amount of time I would have spent debugging my own code. Also, since Tushita is more familiar with some of the other components within the system than I am, and I am more familiar with other components in the system thatn she is, it was easy to determine how the the game screen would need to be implemented without spending too much time referring to the design document. Overall, two pairs of eyes and minds increased the level of productivity since each of us possessed a different set of skills, were able to share thoughts and knowledge with each other, and were able to spot mistakes and flaws quicker. 

Pair Programming Session with Scott:

The pair programming session involving Scott and I focused on implementing the Flow component within the system. Although the session produced a fair amount of code, the majority of the session was spent exposing and correcting some of the inherent flaws of the design of the flow component, since we were unable to produce the code we needed to perform many of the necessary tasks. Similar to my pair programming session with Tushita, I possess more experience developing graphical user interfaces using Java than Scott and Scott's understanding of how the Flow component would be required to interact with the other components of the system both enabled us to produce more code than either of us could alone. At the beginning of the session, I could tell that Scott's experience with Java events is limited, but, partially due to my experience with Java events and Scott's ability to quickly learn, Scott was quickly able to quickly overcome this challenge. The majority of the exposed flaws of the Flow component were exposed when one of us would ask the other how some piece of code should be written to correctly perform some task, and when neither of us were able to produce an answer, both of us began producing ideas and our individual understanding of the other components within the system to more quickly resolve the issue. Also, it was interesting to see how Scott would approach a problem by speaking to me about it. Scott would recognise a problem within the design and voice it or ask me a question, but he would almost immediately produce the answer himself, only to have me confirm it. I realised that perhaps speaking with others about challenges or problems while coding may actually lead to less time spent on a problem, as I normally spend much time trying to discover the solution myself. Finally, Scott made it clear that he preferred lists over arrays for multiple reasons, and even made changes to the code of the Flow component involving arrays to instead use lists because using lists reduced the amount of code written significantly. Again, this made me realise that stepping outside of my comfort zone of usual practices may result in improved results. Overall, the session discovered some problems and was enlightening. 
